name: Release Smile Java SDK
on:
  workflow_dispatch:
    inputs:
      version_override:
        description: 'The version to release. If not specified, the version will be inferred'
        required: false
        default: ''

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}

jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      # https://github.com/actions/checkout/issues/766
      - name: Mark Git directory as Safe
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - name: Read Version
        id: read_version
        run: |
          if [ -n "${{ github.event.inputs.version_override }}" ]; then
            if [[ "${{ github.event.inputs.version_override }}" == *-SNAPSHOT ]]; then
              echo "Version cannot end in -SNAPSHOT (${{ github.event.inputs.version_override }})"
              exit 1
            fi
            echo "Using version override: ${{ github.event.inputs.version_override }}"
            version=${{ github.event.inputs.version_override }}
          else
            version=$(cat ./VERSION)
            if [[ $version != *-SNAPSHOT ]]; then
              echo "Version $version from file does not end in -SNAPSHOT"
              exit 1
            fi
            version=${version%-SNAPSHOT}
          fi
          echo "version=$version" >> $GITHUB_OUTPUT
          if [[ $version == *alpha* || $version == *beta* || $version == *rc* ]]; then
              echo "is_prerelease=true" >> $GITHUB_OUTPUT
          else
              echo "is_prerelease=false" >> $GITHUB_OUTPUT
          fi
      - name: Push Tag
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git tag -a "${tag}" -m "${message}"
          git push origin "${tag}"
        env:
          tag: v${{ steps.read_version.outputs.version }}
          message: Release v${{ steps.read_version.outputs.version }}
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Build, Test, and Publish
        run: ./gradlew build test publish
        env:
          ORG_GRADLE_PROJECT_VERSION_NAME: ${{ steps.read_version.outputs.version }}
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.ARTIFACT_GPG_SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.ARTIFACT_GPG_SIGNING_KEY_ID }}
      - name: Archive JAR
        uses: actions/upload-artifact@v4
        with:
          name: Java Library JAR
          path: build/libs/*.jar
      - name: Create GitHub Release
        uses: actions/create-release@v1
        id: create_release
        env:
          # Use PAT instead of GITHUB_TOKEN so that the post-release workflow triggers
          # https://stackoverflow.com/a/69063453
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          release_name: v${{ steps.read_version.outputs.version }}
          tag_name: v${{ steps.read_version.outputs.version }}
          prerelease: ${{ steps.read_version.outputs.is_prerelease }}
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/libs/smile-identity-core-${{ steps.read_version.outputs.version }}.jar
          asset_name: com.smileidentity_smile-identity-core_${{ steps.read_version.outputs.version }}.jar
          asset_content_type: application/java-archive